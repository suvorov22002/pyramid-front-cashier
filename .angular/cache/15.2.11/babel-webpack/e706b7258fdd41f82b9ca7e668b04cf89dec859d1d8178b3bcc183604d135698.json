{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _Barcode2 = require(\"../Barcode.js\");\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nvar MSI = function (_Barcode) {\n  _inherits(MSI, _Barcode);\n  function MSI(data, options) {\n    _classCallCheck(this, MSI);\n    return _possibleConstructorReturn(this, (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options));\n  }\n  _createClass(MSI, [{\n    key: \"encode\",\n    value: function encode() {\n      // Start bits\n      var ret = \"110\";\n      for (var i = 0; i < this.data.length; i++) {\n        // Convert the character to binary (always 4 binary digits)\n        var digit = parseInt(this.data[i]);\n        var bin = digit.toString(2);\n        bin = addZeroes(bin, 4 - bin.length);\n\n        // Add 100 for every zero and 110 for every 1\n        for (var b = 0; b < bin.length; b++) {\n          ret += bin[b] == \"0\" ? \"100\" : \"110\";\n        }\n      }\n\n      // End bits\n      ret += \"1001\";\n      return {\n        data: ret,\n        text: this.text\n      };\n    }\n  }, {\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[0-9]+$/) !== -1;\n    }\n  }]);\n  return MSI;\n}(_Barcode3.default);\nfunction addZeroes(number, n) {\n  for (var i = 0; i < n; i++) {\n    number = \"0\" + number;\n  }\n  return number;\n}\nexports.default = MSI;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}