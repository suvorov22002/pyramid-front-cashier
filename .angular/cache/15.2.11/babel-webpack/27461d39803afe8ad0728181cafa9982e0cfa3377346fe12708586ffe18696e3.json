{"ast":null,"code":"import { ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NbAuthModule, NbDummyAuthStrategy } from '@nebular/auth';\nimport { NbSecurityModule, NbRoleProvider } from '@nebular/security';\nimport { of as observableOf } from 'rxjs';\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport { AnalyticsService, SeoService } from './utils';\nimport { UserData } from './data/users';\nimport { UserService } from './mock/users.service';\nimport { MockDataModule } from './mock/mock-data.module';\nimport * as i0 from \"@angular/core\";\nconst socialLinks = [{\n  url: 'https://github.com/akveo/nebular',\n  target: '_blank',\n  icon: 'github'\n}, {\n  url: 'https://www.facebook.com/akveo/',\n  target: '_blank',\n  icon: 'facebook'\n}, {\n  url: 'https://twitter.com/akveo_inc',\n  target: '_blank',\n  icon: 'twitter'\n}];\nconst DATA_SERVICES = [{\n  provide: UserData,\n  useClass: UserService\n}];\nexport class NbSimpleRoleProvider extends NbRoleProvider {\n  getRole() {\n    // here you could provide any role based on any auth flow\n    return observableOf('guest');\n  }\n}\nexport const NB_CORE_PROVIDERS = [...MockDataModule.forRoot().providers, ...DATA_SERVICES, ...NbAuthModule.forRoot({\n  strategies: [NbDummyAuthStrategy.setup({\n    name: 'email',\n    delay: 3000\n  })],\n  forms: {\n    login: {\n      socialLinks: socialLinks\n    },\n    register: {\n      socialLinks: socialLinks\n    }\n  }\n}).providers, NbSecurityModule.forRoot({\n  accessControl: {\n    guest: {\n      view: '*'\n    },\n    user: {\n      parent: 'guest',\n      create: '*',\n      edit: '*',\n      remove: '*'\n    }\n  }\n}).providers, {\n  provide: NbRoleProvider,\n  useClass: NbSimpleRoleProvider\n}, AnalyticsService, SeoService];\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule {\n    constructor(parentModule) {\n      throwIfAlreadyLoaded(parentModule, 'CoreModule');\n    }\n    static forRoot() {\n      return {\n        ngModule: CoreModule,\n        providers: [...NB_CORE_PROVIDERS]\n      };\n    }\n  }\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n  };\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [CommonModule, NbAuthModule]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}