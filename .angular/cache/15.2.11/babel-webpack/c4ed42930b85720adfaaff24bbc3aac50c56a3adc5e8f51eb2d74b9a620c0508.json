{"ast":null,"code":"export function verifier(echar) {\n  let __echar = [];\n  let v = false;\n  __echar = echar.split(\".\");\n  if (__echar.length > 1) v = true;\n  return v;\n}\nexport function verifierChoice(_echar) {\n  let message = {};\n  let multiplicite = 1;\n  if (isNaN(+_echar[0]) === true || _echar[0] === '' || _echar[0] === undefined) {\n    message = {\n      \"isError\": true,\n      \"message\": \"1ère saisie non valide\"\n    };\n    return message;\n  }\n  for (let j = 0; j < _echar.length; j++) {\n    if (isNaN(+_echar[j]) === true || _echar[j] === '' || _echar[j] === undefined) {\n      if (_echar[j] === '' || _echar[j] === undefined) {\n        message = {\n          \"isError\": true,\n          \"message\": \"Mauvaise saisie\"\n        };\n        return message;\n      }\n      //check possible multiple round\n      if (j === _echar.length - 1) {\n        var multiChar = _echar[j].toLowerCase().split(\"n\");\n        if (multiChar.length < 2) {\n          message = {\n            \"isError\": true,\n            \"message\": \"Mauvaise saisie\"\n          };\n          return message;\n        }\n        if (Number.isInteger(parseInt(multiChar[0])) === false) {\n          message = {\n            \"isError\": true,\n            \"message\": \"Mauvaise saisie\"\n          };\n          return message;\n        }\n        if (Number.isInteger(parseInt(multiChar[1])) === false) {\n          message = {\n            \"isError\": true,\n            \"message\": \"Multiplicité incorrecte (1 - 6)\"\n          };\n          return message;\n        }\n        if (parseInt(multiChar[0]) < 1 || parseInt(multiChar[0]) > 80) {\n          message = {\n            \"isError\": true,\n            \"message\": \"Saisi incorrecte (1 - 80)\"\n          };\n          return message;\n        }\n        if (parseInt(multiChar[1]) > 6) {\n          message = {\n            \"isError\": true,\n            \"message\": \"Multiplicité incorrecte (1 - 6)\"\n          };\n          return message;\n        }\n        _echar.pop();\n        _echar.push(multiChar[0]);\n        multiplicite = parseInt(multiChar[1]);\n      } else {\n        message = {\n          \"isError\": true,\n          \"message\": \"Mauvaise saisie\"\n        };\n        return message;\n      }\n    } else {\n      // Check if the given number is between 1 and 80 (Keno's rules)\n      if (parseInt(_echar[j]) < 1 || parseInt(_echar[j]) > 80) {\n        message = {\n          \"isError\": true,\n          \"message\": \"Saisi incorrecte (1 - 80)\"\n        };\n        return message;\n      }\n    }\n  }\n  // Check if there is repeated number\n  const uniqueArray = array => Array.from(new Set(array));\n  var sameEchar = uniqueArray(_echar);\n  if (sameEchar.length !== _echar.length) {\n    message = {\n      \"isError\": true,\n      \"message\": \"Numéro dupliqué\"\n    };\n    return message;\n  }\n  var _echars = _echar.map(e => parseInt(e));\n  _echars = _echars.sort(function (a, b) {\n    return a - b;\n  });\n  message = {\n    \"isError\": false,\n    \"multiplicite\": multiplicite,\n    \"data\": _echars.join('-')\n  };\n  return message;\n}\nexport function buscarDraw(aleaChoix, jeuAlea) {\n  // Create an array of numbers from 1 to 80\n  const numbers = Array.from({\n    length: 80\n  }, (_, i) => i + 1);\n  // Shuffle the array using Fisher-Yates algorithm\n  for (let i = numbers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n  // Select the first n numbers from the shuffled array\n  const combi = numbers.slice(0, aleaChoix);\n  combi.forEach(el => console.log(el));\n  if (aleaChoix == 0) {\n    return combi.join('.');\n  } else if (aleaChoix == 1) {\n    return \"-\".concat(combi.join('-'));\n  } else if (aleaChoix == 2) {\n    return \"+\".concat(combi.join('-'));\n  }\n}\nexport * from '.';","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}