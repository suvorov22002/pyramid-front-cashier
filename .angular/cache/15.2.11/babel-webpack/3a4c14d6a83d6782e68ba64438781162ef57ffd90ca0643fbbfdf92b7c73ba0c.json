{"ast":null,"code":"import { verifier, verifierChoice } from \".\";\nexport function numOutCheck(selection) {\n  let message = {};\n  let multiplicite = 1;\n  if (verifier(selection)) {\n    message = {\n      \"isError\": true,\n      \"message\": \"Mauvaise saisie\"\n    };\n    return message;\n  }\n  var _echar = selection.trim().split('-').slice(1);\n  verifierChoice(_echar);\n  /*\r\n      // Verification du nombre de numeros saisi pour le pari\r\n      if(_echar.length < 1 || _echar.length > 10 ){\r\n          \r\n          message = {\r\n              \"isError\": true,\r\n              \"message\": \"Choix entre 1 et 10\"\r\n          }\r\n  \r\n          return message;\r\n      }\r\n  \r\n      \r\n  \r\n      for(let j = 0; j < _echar.length; j++){\r\n          \r\n          if(isNaN(+_echar[j]) === true){ // Check if value provided is a number\r\n              //check possible multiple round\r\n              if( j === (_echar.length - 1)) {\r\n  \r\n                  var multiChar = _echar[j].toLowerCase().split(\"n\");\r\n  \r\n                  if (multiChar.length < 2) {\r\n                      message = {\r\n                          \"isError\": true,\r\n                          \"message\": \"Mauvaise saisie\"\r\n                      }\r\n              \r\n                      return message;\r\n                  }\r\n  \r\n                  if(Number.isInteger(parseInt(multiChar[0])) === false){\r\n                      \r\n                      message = {\r\n                          \"isError\": true,\r\n                          \"message\": \"Mauvaise saisie\"\r\n                      }\r\n              \r\n                      return message;\r\n                  }\r\n  \r\n                  if(Number.isInteger(parseInt(multiChar[1])) === false){\r\n                  \r\n                      message = {\r\n                          \"isError\": true,\r\n                          \"message\": \"Multiplicité incorrecte (1 - 6)\"\r\n                      }\r\n              \r\n                      return message;\r\n                  }\r\n  \r\n                  if(parseInt(multiChar[0]) < 1 || parseInt(multiChar[0]) > 80) {\r\n                      \r\n                      message = {\r\n                          \"isError\": true,\r\n                          \"message\": \"Saisi incorrecte (1 - 80)\"\r\n                      }\r\n              \r\n                      return message;\r\n                  }\r\n  \r\n                  if(parseInt(multiChar[1]) > 6) {\r\n                      \r\n                      message = {\r\n                          \"isError\": true,\r\n                          \"message\": \"Multiplicité incorrecte (1 - 6)\"\r\n                      }\r\n              \r\n                      return message;\r\n                  }\r\n  \r\n                  _echar.pop();\r\n                  _echar.push(multiChar[0]);\r\n                  multiplicite = parseInt(multiChar[1]);\r\n                  console.log(\"multiplicite: \" + multiplicite)\r\n                 \r\n              }\r\n              else {\r\n                  message = {\r\n                      \"isError\": true,\r\n                      \"message\": \"Mauvaise saisie\"\r\n                  }\r\n          \r\n                  return message;\r\n              }\r\n          }\r\n          else{\r\n              // Check if the given number is between 1 and 80 (Keno's rules)\r\n              if(parseInt(_echar[j]) < 1 || parseInt(_echar[j]) > 80) {\r\n                      \r\n                  message = {\r\n                      \"isError\": true,\r\n                      \"message\": \"Saisi incorrecte (1 - 80)\"\r\n                  }\r\n          \r\n                  return message;\r\n              }\r\n          }\r\n      }\r\n  \r\n       // Check if there is repeated number\r\n       const uniqueArray = (array) => Array.from(new Set(array))\r\n       var sameEchar = uniqueArray(_echar);\r\n       \r\n       if(sameEchar.length !== _echar.length) {\r\n           message = {\r\n               \"isError\": true,\r\n               \"message\": \"Numéro dupliqué\"\r\n           }\r\n   \r\n           return message;\r\n       }\r\n       */\n  var _echars = _echar.map(e => parseInt(e));\n  _echars = _echars.sort(function (a, b) {\n    return a - b;\n  });\n  message = {\n    \"isError\": false,\n    \"message\": \"Hors tirage\",\n    \"data\": _echars.join('-'),\n    \"multiplicite\": multiplicite\n  };\n  return message;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}