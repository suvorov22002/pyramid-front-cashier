{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ShiftService = /*#__PURE__*/(() => {\n  class ShiftService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.namespace = \"api/v1/shifts\";\n      this.API_URL = environment.apiUrl;\n    }\n    openShift(shift) {\n      return this.httpClient.post(`${this.API_URL}/${this.namespace}`, shift, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    selectShift(shift) {\n      return this.httpClient.post(`${this.API_URL}/${this.namespace}/open`, shift, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    summarizeShift(shift) {\n      return this.httpClient.post(`${this.API_URL}/${this.namespace}/summarize`, shift, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    closeShift(shift) {\n      return this.httpClient.put(`${this.API_URL}/${this.namespace}`, shift, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n  }\n  ShiftService.ɵfac = function ShiftService_Factory(t) {\n    return new (t || ShiftService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ShiftService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShiftService,\n    factory: ShiftService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShiftService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}