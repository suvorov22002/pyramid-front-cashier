{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nexports.checksum = checksum;\nvar _encoder = require(\"./encoder\");\nvar _encoder2 = _interopRequireDefault(_encoder);\nvar _Barcode2 = require(\"../Barcode.js\");\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nvar UPC = function (_Barcode) {\n  _inherits(UPC, _Barcode);\n  function UPC(data, options) {\n    _classCallCheck(this, UPC);\n\n    // Add checksum if it does not exist\n    if (data.search(/^[0-9]{11}$/) !== -1) {\n      data += checksum(data);\n    }\n    var _this = _possibleConstructorReturn(this, (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options));\n    _this.displayValue = options.displayValue;\n\n    // Make sure the font is not bigger than the space between the guard bars\n    if (options.fontSize > options.width * 10) {\n      _this.fontSize = options.width * 10;\n    } else {\n      _this.fontSize = options.fontSize;\n    }\n\n    // Make the guard bars go down half the way of the text\n    _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n    return _this;\n  }\n  _createClass(UPC, [{\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum(this.data);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      if (this.options.flat) {\n        return this.flatEncoding();\n      } else {\n        return this.guardedEncoding();\n      }\n    }\n  }, {\n    key: \"flatEncoding\",\n    value: function flatEncoding() {\n      var result = \"\";\n      result += \"101\";\n      result += (0, _encoder2.default)(this.data.substr(0, 6), \"LLLLLL\");\n      result += \"01010\";\n      result += (0, _encoder2.default)(this.data.substr(6, 6), \"RRRRRR\");\n      result += \"101\";\n      return {\n        data: result,\n        text: this.text\n      };\n    }\n  }, {\n    key: \"guardedEncoding\",\n    value: function guardedEncoding() {\n      var result = [];\n\n      // Add the first digit\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text.substr(0, 1),\n          options: {\n            textAlign: \"left\",\n            fontSize: this.fontSize\n          }\n        });\n      }\n\n      // Add the guard bars\n      result.push({\n        data: \"101\" + (0, _encoder2.default)(this.data[0], \"L\"),\n        options: {\n          height: this.guardHeight\n        }\n      });\n\n      // Add the left side\n      result.push({\n        data: (0, _encoder2.default)(this.data.substr(1, 5), \"LLLLL\"),\n        text: this.text.substr(1, 5),\n        options: {\n          fontSize: this.fontSize\n        }\n      });\n\n      // Add the middle bits\n      result.push({\n        data: \"01010\",\n        options: {\n          height: this.guardHeight\n        }\n      });\n\n      // Add the right side\n      result.push({\n        data: (0, _encoder2.default)(this.data.substr(6, 5), \"RRRRR\"),\n        text: this.text.substr(6, 5),\n        options: {\n          fontSize: this.fontSize\n        }\n      });\n\n      // Add the end bits\n      result.push({\n        data: (0, _encoder2.default)(this.data[11], \"R\") + \"101\",\n        options: {\n          height: this.guardHeight\n        }\n      });\n\n      // Add the last digit\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text.substr(11, 1),\n          options: {\n            textAlign: \"right\",\n            fontSize: this.fontSize\n          }\n        });\n      }\n      return result;\n    }\n  }]);\n  return UPC;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\nfunction checksum(number) {\n  var result = 0;\n  var i;\n  for (i = 1; i < 11; i += 2) {\n    result += parseInt(number[i]);\n  }\n  for (i = 0; i < 11; i += 2) {\n    result += parseInt(number[i]) * 3;\n  }\n  return (10 - result % 10) % 10;\n}\nexports.default = UPC;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}