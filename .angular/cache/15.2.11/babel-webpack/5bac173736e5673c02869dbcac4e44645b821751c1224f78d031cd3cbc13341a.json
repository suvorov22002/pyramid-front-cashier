{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _constants = require('./constants');\nvar _encoder = require('./encoder');\nvar _encoder2 = _interopRequireDefault(_encoder);\nvar _Barcode2 = require('../Barcode');\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n// Base class for EAN8 & EAN13\nvar EAN = function (_Barcode) {\n  _inherits(EAN, _Barcode);\n  function EAN(data, options) {\n    _classCallCheck(this, EAN);\n\n    // Make sure the font is not bigger than the space between the guard bars\n    var _this = _possibleConstructorReturn(this, (EAN.__proto__ || Object.getPrototypeOf(EAN)).call(this, data, options));\n    _this.fontSize = !options.flat && options.fontSize > options.width * 10 ? options.width * 10 : options.fontSize;\n\n    // Make the guard bars go down half the way of the text\n    _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n    return _this;\n  }\n  _createClass(EAN, [{\n    key: 'encode',\n    value: function encode() {\n      return this.options.flat ? this.encodeFlat() : this.encodeGuarded();\n    }\n  }, {\n    key: 'leftText',\n    value: function leftText(from, to) {\n      return this.text.substr(from, to);\n    }\n  }, {\n    key: 'leftEncode',\n    value: function leftEncode(data, structure) {\n      return (0, _encoder2.default)(data, structure);\n    }\n  }, {\n    key: 'rightText',\n    value: function rightText(from, to) {\n      return this.text.substr(from, to);\n    }\n  }, {\n    key: 'rightEncode',\n    value: function rightEncode(data, structure) {\n      return (0, _encoder2.default)(data, structure);\n    }\n  }, {\n    key: 'encodeGuarded',\n    value: function encodeGuarded() {\n      var textOptions = {\n        fontSize: this.fontSize\n      };\n      var guardOptions = {\n        height: this.guardHeight\n      };\n      return [{\n        data: _constants.SIDE_BIN,\n        options: guardOptions\n      }, {\n        data: this.leftEncode(),\n        text: this.leftText(),\n        options: textOptions\n      }, {\n        data: _constants.MIDDLE_BIN,\n        options: guardOptions\n      }, {\n        data: this.rightEncode(),\n        text: this.rightText(),\n        options: textOptions\n      }, {\n        data: _constants.SIDE_BIN,\n        options: guardOptions\n      }];\n    }\n  }, {\n    key: 'encodeFlat',\n    value: function encodeFlat() {\n      var data = [_constants.SIDE_BIN, this.leftEncode(), _constants.MIDDLE_BIN, this.rightEncode(), _constants.SIDE_BIN];\n      return {\n        data: data.join(''),\n        text: this.text\n      };\n    }\n  }]);\n  return EAN;\n}(_Barcode3.default);\nexports.default = EAN;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}