{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar InvalidInputException = function (_Error) {\n  _inherits(InvalidInputException, _Error);\n  function InvalidInputException(symbology, input) {\n    _classCallCheck(this, InvalidInputException);\n    var _this = _possibleConstructorReturn(this, (InvalidInputException.__proto__ || Object.getPrototypeOf(InvalidInputException)).call(this));\n    _this.name = \"InvalidInputException\";\n    _this.symbology = symbology;\n    _this.input = input;\n    _this.message = '\"' + _this.input + '\" is not a valid input for ' + _this.symbology;\n    return _this;\n  }\n  return InvalidInputException;\n}(Error);\nvar InvalidElementException = function (_Error2) {\n  _inherits(InvalidElementException, _Error2);\n  function InvalidElementException() {\n    _classCallCheck(this, InvalidElementException);\n    var _this2 = _possibleConstructorReturn(this, (InvalidElementException.__proto__ || Object.getPrototypeOf(InvalidElementException)).call(this));\n    _this2.name = \"InvalidElementException\";\n    _this2.message = \"Not supported type to render on\";\n    return _this2;\n  }\n  return InvalidElementException;\n}(Error);\nvar NoElementException = function (_Error3) {\n  _inherits(NoElementException, _Error3);\n  function NoElementException() {\n    _classCallCheck(this, NoElementException);\n    var _this3 = _possibleConstructorReturn(this, (NoElementException.__proto__ || Object.getPrototypeOf(NoElementException)).call(this));\n    _this3.name = \"NoElementException\";\n    _this3.message = \"No element to render on.\";\n    return _this3;\n  }\n  return NoElementException;\n}(Error);\nexports.InvalidInputException = InvalidInputException;\nexports.InvalidElementException = InvalidElementException;\nexports.NoElementException = NoElementException;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}